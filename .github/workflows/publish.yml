name: Publish Docker image

on:
  workflow_dispatch:
    inputs:
      pgbackrest_version:
        description: 'pgBackrest version'
        required: true
        default: '2.57.0'
        type: string

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}
  VERSION_TAG: ${{ github.event.inputs.pgbackrest_version }}

jobs:
  build:
    name: Build image (${{ matrix.platform }})
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux/amd64
            runner: ubuntu-24.04
          - platform: linux/arm64
            runner: ubuntu-24.04-arm
    steps:
      - name: Check out the repo
        uses: actions/checkout@v5

      - name: Prepare platform name
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
          echo "TEST_TAG=pgbackrest-test-${platform//\//-}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image for smoke test
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.platform }}
          load: true
          tags: ${{ env.TEST_TAG }}
          build-args: |
            PGBACKREST_VERSION=${{ env.VERSION_TAG }}
          cache-from: type=gha,scope=pgbackrest-${{ env.PLATFORM_PAIR }}
          cache-to: type=gha,scope=pgbackrest-${{ env.PLATFORM_PAIR }},mode=max

      - name: Smoke test (${{ matrix.platform }})
        run: |
          docker run --rm ${{ env.TEST_TAG }} pgbackrest --version

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.platform }}
          push: true
          outputs: type=image,push-by-digest=true,name-canonical=true,push=true
          tags: ${{ env.IMAGE_NAME }}
          build-args: |
            PGBACKREST_VERSION=${{ env.VERSION_TAG }}
          cache-from: type=gha,scope=pgbackrest-${{ env.PLATFORM_PAIR }}
          cache-to: type=gha,scope=pgbackrest-${{ env.PLATFORM_PAIR }},mode=max

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    name: Publish multi-arch manifest
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create manifest list
        working-directory: ${{ runner.temp }}/digests
        run: |
          image=${{ env.IMAGE_NAME }}
          version=${{ env.VERSION_TAG }}
          args=()
          for digest in *; do
            args+=("${image}@sha256:${digest}")
          done
          docker buildx imagetools create \
            -t ${image}:${version} \
            -t ${image}:latest \
            "${args[@]}"

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.IMAGE_NAME }}:${{ env.VERSION_TAG }}
